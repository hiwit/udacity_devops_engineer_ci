version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3

jobs:
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - restore_cache:
          keys:
            - hiwit-${CIRCLE_BUILD_NUM}
      - run:
          name: debug cache
          command: |
           ls -la cache_ec2
           echo "printing inventory"
           cat cache_ec2/inventory
      - add_ssh_keys:
          fingerprints: ["89:21:e4:6c:21:0c:65:35:2b:49:62:33:ad:d8:33:52"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure Server
          command: |
            ansible-playbook -i cache_ec2/inventory ansible/main-remote.yml
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file infrastructure/infra.yml \
            --stack-name hiwit-${CIRCLE_BUILD_NUM} \
            --region us-east-1
      - run:
          name: ec2 cache
          command: "mkdir -p cache_ec2"
      - run:
          name: Get EC2 instances
          command: |
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters 'Name=tag:project,Values=udacity' \
            --output text >> cache_ec2/inventory
      - save_cache:
          paths:
            - "cache_ec2"
          key: hiwit-${CIRCLE_BUILD_NUM}
workflows:
  create_infrastructure_and_deploy:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires: 
            - create_infrastructure